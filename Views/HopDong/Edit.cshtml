@model HopDong

@{
  ViewData["Title"] = "Chỉnh sửa";
  var hopDong = ViewData["hopDong"] as HopDong;
  var lstDoanhNghiep = ViewData["lstDoanhNghiep"] as List<DoanhNghiep>;
  var lstNhaCungCap = ViewData["lstNhaCungCap"] as List<NhaCungCap>;
  var lstTrangThai = ViewData["lstTrangThai"] as List<TrangThaiHopDong>;
  var lstLoHang = ViewData["lstLoHang"] as List<LoHang>;
  var lstKho = ViewData["lstKho"] as List<Kho>;
  var lstPhuongTien = ViewData["lstPhuongTien"] as List<PhuongTien>;
  var lstDonViTinh = ViewData["lstDonViTinh"] as List<DonViTinh>;
  var lstTraiCay = ViewData["lstTraiCay"] as List<TraiCay>;
  object doiTac;
  var stt = 0;
}

<!-- Basic Layout -->
<div class="row">
  <div class="col-xl">
    <div class="card mb-4">
      <h5 class="card-header">Chỉnh sửa hợp đồng</h5>
      <div class="card-body">
        <form asp-action="Edit" asp-route-id="@Model.MaHopDong">
          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-fullname">Tên hợp đồng</label>
            <div class="input-group input-group-merge">
              <input type="text" class="form-control" id="basic-icon-default-fullname" asp-for="@Model.TenHopDong"
                aria-label="John Doe" aria-describedby="basic-icon-default-fullname2"/>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-company">Nhân viên phụ trách</label>
            <div class="input-group input-group-merge">
              <select class="form-select matraicay" asp-items="@(ViewData["lstNhanVien"] as SelectList)" asp-for="@Model.MaNhanVien">
              </select>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-company">Đối tác</label>
            <div class="input-group input-group-merge">
              @if (hopDong.IdloaiHopDong == 1)
              {
                <select class="form-select" id="doiTacSelect" asp-items="@(new SelectList(lstNhaCungCap, "MaNhaCungCap", "TenNhaCungCap", hopDong?.MaDoiTac))" asp-for="@Model.MaDoiTac">
                </select>
              }
              else
              {
                <select class="form-select" id="doiTacSelect" asp-items="@(new SelectList(lstDoanhNghiep, "MaDoanhNghiep", "TenDoanhNghiep", hopDong?.MaDoiTac))" asp-for="@Model.MaDoiTac">
                </select>
              }
              @* <select class="form-select" id="doiTacSelect" asp-for="@Model.MaDoiTac">
              </select> *@
            </div>
          </div>

          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-company">Ngày ký</label>
            <div class="input-group input-group-merge">
              <input type="datetime-local" id="basic-icon-default-boPhan" class="form-control"
                value="@(hopDong.NgayKy?.ToString("yyyy-MM-ddTHH:mm"))"
                aria-label="Ngày ký" aria-describedby="basic-icon-default-company2"
                asp-for="NgayKy"/>
            </div>
          </div>

          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-company">Tổng giá tiền</label>
            <div class="input-group input-group-merge">
              <input type="text" id="basic-icon-default-status" class="form-control"
                aria-label="ACME Inc." aria-describedby="basic-icon-default-company2" readonly asp-for="@Model.TongGia"/>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-email">Loại hợp đồng</label>
            <div class="input-group input-group-merge">
              <select class="form-select" id="loaiHopDongSelect" asp-items="@(ViewData["lstLoaiHopDong"] as SelectList)" asp-for="@Model.IdloaiHopDong">
              </select>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label" for="basic-icon-default-email">Trạng thái</label>
            <div class="input-group input-group-merge">
              <select class="form-select" asp-items="@(ViewData["lstTrangThaiSelectList"] as SelectList)" asp-for="@Model.IdtrangThai">
              </select>
            </div>
          </div>

          <h4 class="card-header">Danh sách lô hàng</h4>
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a class="btn btn-gradient-success btn-md" id="addLoHang" data-id="@hopDong.MaHopDong">Thêm mới</a>
                </li>
            </ol>
          </nav>
          <div class="table-responsive text-nowrap">
            <table class="table table-hover" id="employeeTable">
              <thead>
                <tr>
                  <th>STT</th>
                  <th>Trái cây</th>
                  <th>Số lượng</th>
                  <th>Giá tiền</th>
                  <th>Tên kho</th>
                  <th>Phương tiện</th>
                  <th>Trạng thái</th>
                  <th></th>
                </tr>
              </thead>
              <tbody class="table-border-bottom-0">
              @foreach (var loHang in lstLoHang)
              {
                var traiCay = loHang != null ? lstTraiCay.Where(c => c.MaTraiCay == loHang.MaTraiCay).FirstOrDefault() : null;
                var phuongTien = lstPhuongTien.Where(c => c.MaPhuongTien == loHang.MaPhuongTien).FirstOrDefault();
                var donViTinh = loHang != null ? lstDonViTinh.Where(c => c.IdDonViTinh == loHang.IdDonViTinh).FirstOrDefault() : null;
                var kho = loHang != null ? lstKho.Where(c => c.MaKho == loHang.MaKho).FirstOrDefault() : null;
                var trangThai = lstTrangThai.Where(c => c.IdtrangThai == loHang.IdtrangThai).FirstOrDefault();
                <tr data-id="@loHang.MaLoHang">
                  <td>@(++stt)</td>
                  <td>
                    @(traiCay?.TenTraiCay ?? "")
                  </td>
                  <td>
                    @((loHang?.SoLuong.ToString() ?? "") + " " + (donViTinh?.DonViTinh1 ?? ""))
                  </td>
                  <td>
                    @(loHang?.DonGia.ToString() ?? "")
                  </td>
                  <td>
                    @(kho?.TenKho ?? "")
                  </td>
                  <td>
                    @(phuongTien?.TenPhuongTien ?? "")
                  </td>
                  <td>
                    @(trangThai?.TrangThai ?? "")
                  </td>
                  <td>
                    <div class="dropdown view-mode">
                      <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="bx bx-dots-vertical-rounded"></i></button>
                      <div class="dropdown-menu">
                        <a class="dropdown-item edit-button" data-id="@loHang.MaLoHang"><i class="bx bx-edit-alt me-1 "></i> Edit</a>
                        <a class="dropdown-item delete-button" data-id="@loHang.MaLoHang"><i class="bx bx-trash me-1 "></i> Delete</a>
                      </div>
                    </div>
                    <div class="edit-mode" style="display:none;">
                      <button type="button" class="btn btn-primary save-button">Save</button>
                      <button type="button" class="btn btn-secondary cancel-button">Cancel</button>
                    </div>
                  </td>
                </tr>
              }
              </tbody>
            </table>
          </div>

          <button id="editBtn" type="submit" class="btn btn-primary" data-id="@hopDong.MaHopDong">Save</button>
          <button id="saveBtn" type="submit" asp-action="Index" class="btn btn-primary">Back</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>



  $('#employeeTable').on('click', '.save-new-row', function() {
      var newRow = $(this).closest('tr');
      var matraicay = newRow.find('.matraicay').val();
      var donvitinh = newRow.find('.donvitinh').val();
      var soluong = newRow.find('.soluong').val();
      var makho = $('#editBtn').data('id');
      console.log(makho);
      console.log(matraicay);
      console.log(donvitinh);
      console.log(soluong);
      // Thực hiện Save dữ liệu mới vào cơ sở dữ liệu hoặc xử lý theo yêu cầu của bạn
      $.ajax({
          url: '/Kho/CreateChiTietKho',
          type: 'POST',
          data: {
              makho: makho,
              matraicay: matraicay,
              donvitinh: donvitinh,
              soluong: soluong
          },
          success: function(response) {
                alert("Thêm mới thành công");
                window.location.reload();
          },
          error: function(xhr, status, error) {
              alert("Thêm mới không thành công");
          }
      });
    });

    $('#employeeTable').on('click', '.cancel-new-row', function() {
      $(this).closest('tr').remove();
    });
</script>

@section PageStyles{
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      document.getElementById('addLoHang').addEventListener('click', function() {
        var id = $(this).data('id');
        window.location.href = '/HopDong/CreateLoHang/' + id;
        console.log('/HopDong/CreateLoHang/'+id);
      });

      var loaiHopDongSelect = document.getElementById('loaiHopDongSelect');
      console.log(loaiHopDongSelect.value);
      loaiHopDongSelect.addEventListener('change', function () {
        updateDoiTacList(this.value);
      });
      function updateDoiTacList(loaiHopDongId) {
        fetch(`/HopDong/GetDoiTacByLoaiHopDong?loaiHopDongId=${loaiHopDongId}`)
          .then(response => {
            console.log("Response status: ", response.status);
            return response.json();
          })
          .then(data => {
            var doiTacSelect = document.getElementById('doiTacSelect');
            doiTacSelect.innerHTML = '';
            console.log("Data received: ", data);
            console.log(`/HopDong/GetDoiTacByLoaiHopDong?loaiHopDongId=${loaiHopDongId}`);
            data.forEach(function (item) {
              console.log("item " + item);
              var option = document.createElement('option');
              option.value = item.id;
              console.log("item.id" + item.id);
              option.text = item.ten;
              console.log("item.ten" + item.ten);
              doiTacSelect.appendChild(option);
            });

            // Set the selected value to the initial value from the model if exists
            var selectedValue = "@(hopDong?.MaDoiTac.ToString() ?? "")";
            if (selectedValue) {
              doiTacSelect.value = selectedValue;
            }
          });
      }

      // Trigger the change event on page load to initialize the "Đối tác" select
      var loaiHopDongId = loaiHopDongSelect.value;
      updateDoiTacList(loaiHopDongId);
    });
  </script>
  <script>
    @* $('.edit-button').on('click', function(e) {
      e.preventDefault();
      console.log("asdasd");
      var row = $(this).closest('tr');
      row.find('.view-mode').hide();
      row.find('.edit-mode').show();
    }); *@
    $(document).ready(function() {
        $('body').on('click', '.edit-button', function(e) {
            console.log("Edit button clicked");
            e.preventDefault();
            var row = $(this).closest('tr');
            var id = row.data('id');
            console.log(id);
            window.location.href = '/HopDong/EditLoHang?id=' + id;
        });

        $('.delete-button').on('click', function(e) {
          var id = $(this).data('id');
          var userConfirmed = confirm("Bạn có chắc chắn muốn xóa không?");
          if (userConfirmed)
          {
              // Thực hiện hành động xóa
              $.ajax({
                  url: '/HopDong/DeleteLoHang',
                  type: 'POST',
                  data: {
                      id: id
                  },
                  success: function(response) {
                        alert("Xoá thành công");
                        window.location.reload();
                  },
                  error: function(xhr, status, error) {
                      alert("Xoá không thành công");
                  }
              });
          } else {
              // Nếu người dùng hủy, không làm gì
              console.log('Người dùng đã hủy xóa');
          }


        });

        $('body').on('click', '.cancel-button', function(e) {
            console.log("Cancel button clicked");
            e.preventDefault();
            var row = $(this).closest('tr');
            row.find('.edit-mode').hide();
            row.find('.view-mode').show();
        });

        $('body').on('click', '.save-button', function()
        {
            var row = $(this).closest('tr');
            var id = row.data('id');
            var maTraiCay = row.find('select[name="MaTraiCay"]').val();
            var soLuong = row.find('input[name="SoLuong"]').val();
            var idDonViTinh = row.find('select[name="IdDonViTinh"]').val();

            console.log("ID:", id);
            console.log("MaTraiCay:", maTraiCay);
            console.log("SoLuong:", soLuong);
            console.log("IdDonViTinh:", idDonViTinh);

            $.ajax({
                url: '/Kho/EditChiTietKho',
                type: 'POST',
                data: {
                    id: id,
                    maTraiCay: maTraiCay,
                    soLuong: soLuong,
                    idDonViTinh: idDonViTinh
                },
                success: function(response) {
                    row.find('.view-mode').show();
                    row.find('.edit-mode').hide();
                    alert("Chỉnh sửa thành công");
                    window.location.reload();
                },
                error: function(xhr, status, error) {
                    alert("Chỉnh sửa không thành công");
                }
            });
        });
      });
  </script>
}
