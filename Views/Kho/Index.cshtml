@{
  ViewData["Title"] = "Kho";
  var lstKho = ViewData["lstKho"] as List<Kho>;
  int stt = 0;
  var successMessage = TempData["SuccessMessage"] as string;
}

@* @if (!string.IsNullOrEmpty(successMessage))
{
    <div id="success-message" class="alert alert-success" role="alert">
        @successMessage
    </div>
} *@
@* <style>
    .breadcrumb {
        background-color: #007bff; /* Màu xanh */
    }
    .breadcrumb .breadcrumb-item a {
        color: white; /* Màu chữ trắng cho nút */
    }
    .breadcrumb .breadcrumb-item a:hover {
        color: #ffcc00; /* Màu chữ khi hover */
    }
</style> *@

@* ************** Content ************** *@
<h4 class="py-3 mb-4">
  <span class="text-muted fw-light">Kho</span>
</h4>
<input type="hidden" id="success-message" value="@successMessage"/>

<!-- Basic Bootstrap Table -->
<div class="card">
  <h5 class="card-header">Danh sách kho</h5>
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a class="btn btn-gradient-success btn-md" id="addRowBtn">Thêm mới</a>
        </li>
    </ol>
  </nav>
  <div class="table-responsive text-nowrap">
    <table class="table table-striped table-hover" id="employeeTable">
      <thead>
        <tr>
          <th>STT</th>
          <th>Tên kho</th>
          <th>Địa chỉ</th>
          <th></th>
        </tr>
      </thead>
      <tbody class="table-border-bottom-0">
        @foreach (var kho in lstKho)
        {
          <tr data-id="@kho.MaKho">
            <td>@(++stt)</td>
            <td>
              <a class="view-mode detail-link" href="#" class="" data-id="@kho.MaKho">
                <span >@kho.TenKho</span>
              </a>
                <input class="edit-mode form-control" type="text" value="@kho.TenKho" style="display:none;">
            </td>
            <td>
                <span class="view-mode">@kho.DiaChi</span>
                <input class="edit-mode form-control" type="text" value="@kho.DiaChi" style="display:none;">
            </td>
            <td>
              <div class="dropdown view-mode">
                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="bx bx-dots-vertical-rounded"></i></button>
                <div class="dropdown-menu">
                  <a class="dropdown-item edit-button" data-id="@kho.MaKho "><i class="bx bx-edit-alt me-1"></i> Edit</a>
                  <a class="dropdown-item delete-button" data-id="@kho.MaKho"><i class="bx bx-trash me-1 "></i> Delete</a>
                </div>
              </div>
              <div class="edit-mode" style="display:none;">
                <button class="btn btn-primary save-button">Lưu</button>
                <button class="btn btn-secondary cancel-button">Hủy</button>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>
<!--/ Basic Bootstrap Table -->
<hr class="my-5">

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var detailLinks = document.querySelectorAll('.delete-button');

    detailLinks.forEach(function(link) {
        link.addEventListener('click', function(event) {
            event.preventDefault(); // Ngăn chặn hành động mặc định của thẻ 'a'

            var idNhanVien = this.getAttribute('data-id');
            console.log(idNhanVien);
            // Chuyển hướng đến trang "View Detail" và gửi thêm tham số idNhanVien
            window.location.href = '/Kho/Delete?id=' + idNhanVien;
        });
    });
  });
  $(document).ready(function()
  {
    $('.detail-link').on('click', function(e)
    {
        e.preventDefault();
        var idNhanVien = this.getAttribute('data-id');
        console.log(idNhanVien);
        // Chuyển hướng đến trang "View Detail" và gửi thêm tham số idNhanVien
        window.location.href = '/Kho/Detail?id=' + idNhanVien;
    });
  });
  @* document.addEventListener("DOMContentLoaded", function() {
      var successMessage = document.getElementById("success-message").value;
      console.log(successMessage);
      if (successMessage != null && successMessage != "") {
        alert(successMessage);
      }
  }); *@

  $('#addRowBtn').on('click', function() {
      var newRow = '<tr>' +
        '<td></td>' +
        '<td><input type="text" class="form-control tenkho"></td>' +
        '<td><input type="text" class="form-control diachi"></td>' +
        '<td>' +
        '<button type="button" class="btn btn-primary save-new-row">Lưu</button>' +
        '<button type="button" class="btn btn-secondary cancel-new-row">Hủy</button>' +
        '</td>' +
        '</tr>';

      $('#employeeTable tbody').append(newRow);
    });

  $('#employeeTable').on('click', '.save-new-row', function() {
      var newRow = $(this).closest('tr');
      var tenkho = newRow.find('.tenkho').val();
      var diachi = newRow.find('.diachi').val();

      // Thực hiện lưu dữ liệu mới vào cơ sở dữ liệu hoặc xử lý theo yêu cầu của bạn

      @* newRow.find('.view-mode').text(newStatus);
      newRow.find('.edit-mode input').val(newStatus);
      newRow.find('.view-mode').show();
      newRow.find('.edit-mode').hide(); *@
      $.ajax({
                url: '/Kho/CreateKho',
                type: 'POST',
                data: {
                    tenkho: tenkho,
                    diachi: diachi
                },
                success: function(response) {
                      alert("Thêm mới thành công");
                      window.location.reload();
                },
                error: function(xhr, status, error) {
                    alert("Thêm mới không thành công");
                }
            });
    });

    $('#employeeTable').on('click', '.cancel-new-row', function() {
      $(this).closest('tr').remove();
    });
</script>


@section PageStyles{
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script>
    $(document).ready(function() {
          $('.edit-button').on('click', function(e) {
              e.preventDefault();
              console.log("asdasd");
              var row = $(this).closest('tr');
              row.find('.view-mode').hide();
              row.find('.edit-mode').show();
          });

          $('.cancel-button').on('click', function() {
              var row = $(this).closest('tr');
              row.find('.edit-mode').hide();
              row.find('.view-mode').show();
          });

          $('.save-button').on('click', function() {
              var row = $(this).closest('tr');
              var id = row.data('id');
              var tenkho = row.find('input:eq(0)').val();
              var diachi = row.find('input:eq(1)').val();
              console.log(id);
              $.ajax({
                  url: '/Kho/EditKho',
                  type: 'POST',
                  data: {
                      id: id,
                      tenkho: tenkho,
                      diachi: diachi
                  },
                  success: function(response) {
                        row.find('.view-mode').show();
                        row.find('.edit-mode').hide();
                        alert("Chỉnh sửa thành công");
                        window.location.reload();
                  },
                  error: function(xhr, status, error) {
                      alert("Chỉnh sửa không thành công");
                  }
              });
          });
      });
  </script>
}
